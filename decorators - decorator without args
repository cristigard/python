#timer decorator(function execution time)
from functools import wraps

import time

def timer(func):
    @wraps(func) #The wraps decorator from the functools can be used to update the metadata of a wrapped function to match that of the original function.
    def wrapper(*args,**kwargs): #*args,**kwargs are the params of func
        start = time.time()
        retrun_value = func(*args,**kwargs)
        print('Time:', round(time.time()-start,2),'sec(s)')
        return retrun_value
    return wrapper


@timer
def f1(t):
    time.sleep(t)


f1(3)
