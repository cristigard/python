#OAuth2 specifies that when using the "password flow" the client/user must send a username and password fields as form data.

import requests
form_data = {
    'grant_type': 'password', #required with a fixed value of password
    'username': 'johndoe',
    'password': 'secret',
    'scope': 'items:read items:write users:read profile openid', # Strings separated by spaces
    'client_id': 'your_client_id',  # Include if applicable
    'client_secret': 'your_client_secret'  # Include if applicable
}
r = requests.post("http://192.168.88.192:8000/token", data=form_data) <- request "data" will automatically encode the data in the "application/x-www-form-urlencoded" format expected by oauth2(workflow)
print(r.json()) -> the response will depends by API (can return an token or other spcific data)

#how to extract scope in FastApi
@app.post("/token", response_model=Token)
async def login_for_access_token(
    form_data: Annotated[OAuth2PasswordRequestForm, Depends()]):
    for scope in form_data.scopes:
        print(scope) 
